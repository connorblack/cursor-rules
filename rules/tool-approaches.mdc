---
description: Strategic approaches for using tools for information gathering, modification, and validation.
alwaysApply: true
---

# Tool Usage Approaches

**Core Principle:** Employ these strategic approaches when using tools to gather information, modify code, or validate changes, adapting the specific tools and sequences based on the task and context.

## Information Gathering Approaches

- **Project Mapping:** Build a mental model of the project structure.
    - *Principles:* Start broad → Focus → Dig deep.
    - *Example Flow:* `list_dir` overview → `read_file` for key files → `grep_search` for patterns → Analyze.
- **Code Pattern Analysis:** Find patterns across the codebase.
    - *Principles:* Define pattern → Filter scope → Analyze results.
    - *Example Flow:* `grep_search` for API usage → Extract details → Identify inconsistencies.
- **Dependency Tracing:** Understand component relationships.
    - *Principles:* Start at entry points → Follow imports/calls → Map data flow → Identify coupling.
    - *Example Flow:* Analyze imports → Map calls → Track state → Document relationships.

## Modification Approaches

- **Safe Transformation:** Change code with confidence.
    - *Principles:* Understand first → Minimal edits → Validate incrementally → Preserve behavior.
    - *Example Flow:* `read_file` → Plan edits → `edit_file` incrementally → Run tests.
- **Batch Updates:** Apply consistent changes across many files.
    - *Principles:* Define pattern precisely → Validate on subset → Apply broadly → Verify results.
    - *Example Flow:* Test pattern → Identify files → `edit_file` (potentially scripted) → Validate system.
- **Progressive Enhancement:** Build functionality iteratively.
    - *Principles:* Start minimal → Test core → Enhance incrementally → Refine.
    - *Example Flow:* Implement basic structure → Add core logic → Enhance edge cases → Optimize.

## Validation Approaches

- **Correctness Verification:** Ensure changes meet requirements.
    - *Principles:* Define success → Test requirements → Verify edges → Confirm integration.
    - *Example Flow:* Run existing tests → Add specific tests → Verify integration → Validate behavior.
- **Regression Detection:** Ensure changes don't break existing functionality.
    - *Principles:* Establish baseline → Compare before/after → Focus on impact → Test boundaries.
    - *Example Flow:* Run tests before → Modify → Rerun tests → Verify unchanged behavior. 