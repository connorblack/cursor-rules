---
description: Unified Tailwind CSS & NativeWind guidelines for styling React (Web) and React Native applications.
globs: **/ui/**/*.tsx, **/ui/**/*.jsx, **/components/**/*.tsx, **/components/**/*.jsx, **/screens/**/*.tsx, **/screens/**/*.jsx, tailwind.config.js, tailwind.config.ts, **/*.css
---

# Tailwind & NativeWind Guidelines

**Core Principle:** Use Tailwind/NativeWind utilities consistently for styling across web and native platforms.

## Version & Platform

- **USE** Tailwind CSS v3.x (current stable version)
- **APPLY** NativeWind for React Native and Tailwind CSS for React Web projects

## Key Platform Differences

- **Platform targeting:** Use platform modifiers (`ios:`, `android:`, `web:`, `native:`) when needed
- **Explicit styles:** Always provide both states for conditional styling in React Native
  ```tsx
  ✅ <Text className="text-black dark:text-red-500" />
  ❌ <Text className="dark:text-white-500" />
  ```
- **Layout differences:** React Native and web have different flex defaults - explicitly set flex-direction and flex properties

## Core Guidelines

- **EXCLUSIVELY** use Tailwind/NativeWind utilities for styling
- **AVOID** inline styles, StyleSheet.create, or traditional CSS
- **USE** Flexbox (`flex`, `items-*`, `justify-*`) for layout
- **FOLLOW** Tailwind's spacing scale and color themes
- **EMPLOY** responsive prefixes (`md:`, `lg:`) and state variants (`hover:`, `focus:`)
- **TEST** layouts across multiple screen sizes and platforms

## Documentation

- When unsure, consult official documentation:
  - NativeWind: https://www.nativewind.dev
  - Tailwind CSS v3: https://v3.tailwindcss.com/docs
